{"version":3,"file":"bundle.js","sources":["webpack:///./JS/script.js"],"sourcesContent":["const chatbotContainer = document.querySelector('.chatbot-container');\nconst chatbotToggle = document.querySelector('.chatbot-toggle-btn')\nconst chatbotToggleBtn = document.querySelector('.chatbot-toggle-icon');\nconst chatbotBody = document.querySelector('.chatbot-body');\nconst chatbotFooter = document.querySelector('.chatbot-footer');\nconst chatbotCloseBtn = document.querySelector('.chatbot-close-btn img');\nconst requestedInfo = document.querySelector('.info-request');\nconst firstInput = document.querySelector('.name');\nconst secondInput = document.querySelector('.surname');\nconst continueBtn = document.querySelector('.continue');\nconst startBtn = document.querySelector('.start');\nconst chatRobot = document.querySelector('.chat-robot');\nconst infoRequest = document.querySelector('.info-request');\n\nlet userName = \"\";\nlet userLocation = \"\";\nlet userWebsite = \"\";\n\nfunction toggleChat() {\n    chatbotContainer.classList.toggle('show');\n    chatbotToggleBtn.classList.toggle('resize');\n}\n\nconst handleContinue = () => {\n    if(firstInput.reportValidity()) {\n        userName = firstInput.value;\n        requestedInfo.textContent = \"Please provide your contact details\";\n        const phoneCont = document.createElement('div');\n        phoneCont.classList.add('phone-cont');\n        phoneCont.innerHTML = `\n            <div class=\"selector-cont\">\n                <div class=\"country-code-selector blue-circle\"></div>\n            </div>\n            <input type=\"tel\" class=\"phone contact\" placeholder=\"Cell phone...\" required />\n            <div class=\"dropdown\" id=\"country-code-dropdown\">\n                <div class=\"dropdown-item\" data-country-code=\"+57\">\n                    <img src=\"./Images/co.png\" alt=\"Colombia flag\" />\n                    <span>Colombia</span>\n                </div>\n                <div class=\"dropdown-item\" data-country-code=\"+1\">\n                    <img src=\"./Images/us.png\" alt=\"USA flag\" />\n                     <span>USA</span>\n                </div>\n                <div class=\"dropdown-item\" data-country-code=\"+34\">\n                    <img src=\"./Images/es.png\" alt=\"Spain flag\" />\n                    <span> Spain</span>\n                </div>\n                <div class=\"dropdown-item\" data-country-code=\"+351\">\n                    <img src=\"./Images/pt.png\" alt=\"Portugal flag\" />\n                    <span> Portugal</span>\n                </div>\n                <div class=\"dropdown-item\" data-country-code=\"+91\">\n                    <img src=\"./Images/in.png\" alt=\"India flag\" />\n                    <span>India</span>\n                </div>\n                <div class=\"dropdown-item\" data-country-code=\"+61\">\n                    <img src=\"./Images/jp.png\" alt=\"Japang\" />\n                    <span> Japan</span>\n                </div>\n            </div>\n        `\n        chatbotBody.insertBefore(phoneCont, firstInput);\n        firstInput.placeholder = \"Email...\";\n        firstInput.type = \"email\";\n        firstInput.value = \"\";\n        secondInput.placeholder = \"Website (Optional)...\";\n        secondInput.value = \"\";\n        continueBtn.classList.add('hide');\n        startBtn.classList.add('block');\n    }\n    const countryCodeSelector = document.querySelector('.country-code-selector');\n    const phoneInput = document.querySelector('.phone');\n    countryCodeSelector.addEventListener('click', toggleDropdown);\n\n    const selectCountryCode = (code, event) => {\n        countryCodeSelector.classList.remove('blue-circle');\n        countryCodeSelector.innerHTML = event.currentTarget.children[0].outerHTML;\n        userLocation = event.currentTarget.children[1].textContent;\n        document.getElementById('country-code-dropdown').classList.remove('block');\n        phoneInput.value = code;\n    }\n    const items = document.querySelectorAll('.dropdown-item');\n    items.forEach((item) => {\n        item.addEventListener('click', (event) => {\n            const code = event.currentTarget.getAttribute('data-country-code');\n            selectCountryCode(code, event)\n        })\n    });\n \n    phoneInput.addEventListener('input', (event) => {\n        if (event.target.value === '') {  \n            countryCodeSelector.classList.add('blue-circle');\n            countryCodeSelector.innerHTML = '';\n        }\n    });\n}\n\nconst handleStart = () => {\n    const phoneInput = document.querySelector('.phone');\n    if(phoneInput.reportValidity() && firstInput.reportValidity()) {\n        requestedInfo.innerHTML = `\n            Let's start helping you\n            <span>You can select an option or write a question below.</span>\n        `;\n        requestedInfo.classList.add('info-resize');\n        startBtn.classList.add('hide');\n        chatbotBody.innerHTML = `\n            <div class=\"suggestions\">\n                <span>What types of agents do you sell?</span>\n                <span>Who owns the bot if I buy it?</span>\n                <span>Is this bot GDPR compliant?</span>\n                <span>I want to try your agents</span>\n            </div>\n        `;\n        chatbotFooter.classList.add('show');   \n    }\n    userWebsite = secondInput.value;\n    document.querySelectorAll('.suggestions span').forEach((span) => {\n        span.addEventListener('click', (event) => {\n            sendMessage(event.target.textContent);\n        })\n    })\n}\n\nfunction toggleDropdown() {\n    const dropdown = document.getElementById('country-code-dropdown');\n    dropdown.classList.toggle('block');\n}\n\nasync function sendMessage(inputValue) {\n    const userInput = document.getElementById('userInput');\n    const messageToSend = inputValue || userInput.value.trim();\n    if (messageToSend !== \"\") {\n        const suggestions = document.querySelector('.suggestions');\n        chatRobot.classList.add('hide');\n        infoRequest.classList.add('hide');\n        suggestions.classList.add('hide');\n        const userMessageCont = document.createElement('div');\n        userMessageCont.classList.add('user-message-cont');\n        const userMessage = document.createElement('div');\n        userMessage.classList.add('user-message');\n        userMessage.textContent = messageToSend;\n        userMessageCont.appendChild(userMessage);\n        const userprofile = document.createElement('img');\n        userprofile.src = './Images/Frame.png';\n        userprofile.alt = 'user image'; userMessage.classList.add('message', 'user-message');\n        userMessageCont.appendChild(userprofile);\n        chatbotBody.appendChild(userMessageCont);\n\n        try {\n            const botResponse = await generateContent(messageToSend, userName, userLocation, userWebsite);\n            if(botResponse) {\n                setTimeout(() => {\n                    const botMessageCont = document.createElement('div');\n                    botMessageCont.classList.add('bot-message-cont');\n                    const botImage = document.createElement('img');\n                    botImage.src = './Images/chat.png';\n                    botImage.alt = 'chatbot image';\n                    botMessageCont.appendChild(botImage);\n                    const botMessage = document.createElement('div');\n                    botMessage.classList.add('bot-message');\n                    botMessage.textContent = botResponse;\n                    botMessageCont.appendChild(botMessage);\n                    chatbotBody.appendChild(botMessageCont);\n                    chatbotBody.scrollTop = chatbotBody.scrollHeight;\n                }, 1000);\n            }\n        }\n        catch (error) {\n            console.log('Error sending message:', error);\n        }\n        userInput.value = \"\";    \n    }\n}\n\nasync function generateContent(userInput, userName, userLocation, userWebsite = '') {\n    const apiKey = process.env.GEMINI_API_KEY;\n    if (!apiKey) throw new Error(\"Missing Gemini API key!\");\n\n    const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${apiKey}`;\n\n    // Define the context for the landing page\n    const pageContext = `\n        Context: This is a landing page named AI Views that promotes intelligent agents trained to solve sales challenges. \n        The main feature of this page is offering solutions and services related to improving sales through the use of smart agents. \n        The page also includes a call to action for users to hire an agent.\n\n        User Information:\n        Name: ${userName}\n        Location: ${userLocation}\n        ${userWebsite ? `Website: ${userWebsite}` : ''}\n    `;\n\n    // Combine context with user input\n    const prompt = `${pageContext}\\nUser Question: ${userInput}`;\n\n    try {\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                contents: [{ parts: [{ text: prompt }] }]\n            })\n        });\n\n        if (!response.ok) {\n            console.log(\"API Error:\", response.status, response.statusText);\n            throw new Error(`API Error: ${response.status} - ${response.statusText}`);\n        }\n\n        const data = await response.json();\n        console.log(\"API Response:\", data); // Debugging\n\n        // Extract response safely\n        return data?.candidates?.[0]?.content?.parts?.[0]?.text || \"No response received.\";\n    } catch (error) {\n        console.error('Error generating content:', error.message);\n        return \"An error occurred while generating content.\";\n    }\n}\n\n\nchatbotToggle.addEventListener('click', toggleChat);\ncontinueBtn.addEventListener('click', handleContinue);\nstartBtn.addEventListener('click', handleStart);\n\ndocument.querySelector('.send-btn').addEventListener('click', () => {\n    sendMessage();\n});\n\ndocument.querySelector('.close-btn').addEventListener('click', toggleChat);\n\ndocument.querySelector('.chatbot-footer input').addEventListener('keydown', (event) => {\n   if(event.key === 'Enter') {\n    sendMessage();\n   }\n});\n\n\n\n\n\n"],"names":["chatbotContainer","document","chatbotToggle","chatbotToggleBtn","chatbotBody","chatbotFooter","requestedInfo","firstInput","secondInput","continueBtn","startBtn","chatRobot","infoRequest","userName","userLocation","userWebsite","toggleChat","toggleDropdown","dropdown","sendMessage","inputValue","userInput","messageToSend","suggestions","userMessageCont","userMessage","userprofile","botResponse","generateContent","setTimeout","botMessageCont","botImage","botMessage","error","console","apiKey","Error","url","pageContext","prompt","response","fetch","JSON","data","phoneCont","countryCodeSelector","phoneInput","selectCountryCode","code","event","items","item","span"],"mappings":"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"}